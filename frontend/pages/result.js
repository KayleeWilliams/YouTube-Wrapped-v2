import Head from 'next/head'
import Link from 'next/link'
import { useState } from 'react'
import Graphic from '../components/Graphic'
import Picker from '../components/CustomPicker'

import IcBaselineArrowRight from '~icons/ic/baseline-arrow-right.jsx'
import IcBaselineArrowLeft from '~icons/ic/baseline-arrow-left.jsx'
import { MaterialPicker, SketchPicker, ChromePicker } from 'react-color'


// // Called on request
export async function getServerSideProps(context) {
	const data = context.query
	// If no data e.g. /result
	if (Object.keys(data).length === 0) {
		return {
			redirect: {
				destination: '/',
				permanent: false,
			},
		}
	}
	//  Return as prop
	return {
		props: {data},
  	}
}

export default function Result({data}) {

	const [colorPicker1, setPicker1] = useState("#c5e6fb");
	const [colorPicker2, setPicker2] = useState("#c5e6fb");
	
	function color([color, picker]) { 
		if (picker === "setPicker1") {
			setPicker1(color);
		} else {
			setPicker2(color);
		}
  	}

	return (
		<div className="snap-x snap-mandatory overflow-scroll flex h-screen w-screen overflow-y-hidden scroll-smooth bg-background">
			<Head>
				<title>Your YouTube Wrapped!</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="initial-scale=1.0, width=device-width" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<div id="1" className="flex flex-shrink-0 snap-start snap-normal flex-col items-center justify-center content-center lg:flex-row w-screen h-screen lg:h-full"> 
				<div className="flex flex-col gap-4 md:mr-4"> 
					<Picker color={color} picker="setPicker1"/>
					<Picker color={color} picker="setPicker2"/>
				</div>
				<Graphic colour={[colorPicker1, colorPicker2]} data={data} /> 
				<div className="flex flex-row w-full lg:w-fit justify-center"> 
					<Link href="#2" scroll={true} replace><IcBaselineArrowRight className="flex-shrink-0 text-link hover:text-on transition ease-in-out delay-150 duration-[400ms] hover:-translate-y-1 hover:scale-150 w-32 h-32 lg:w-64 lg:h-64" /></Link>
				</div>			
			</div>          

			<div id="2" className="flex flex-shrink-0 snap-start snap-normal flex-col items-center lg:flex-row ontent-center justify-center w-screen h-screen"> 
				<Link href="#1" scroll={true} replace><IcBaselineArrowLeft className="flex-shrink-0 text-link hover:text-on transition ease-in-out delay-150 duration-[400ms] hover:-translate-y-1 hover:scale-150 w-0 h-0 lg:w-64 lg:h-64 invisible lg:visible" /></Link>
				<Graphic colour={['#c5e6fb', '#6e34c5']} data={data} />     
				<div className="flex flex-row w-full lg:w-fit justify-center"> 
					<Link href="#1" scroll={true} replace><IcBaselineArrowLeft className="flex-shrink-0 text-link hover:text-on transition ease-in-out delay-150 duration-[400ms] hover:-translate-y-1 hover:scale-150 w-32 h-32 lg:w-0 lg:h-0 visible lg:invisible" /></Link>
					<Link href="#3" scroll={true} replace><IcBaselineArrowRight className="flex-shrink-0 text-link hover:text-on transition ease-in-out delay-150 duration-[400ms] hover:-translate-y-1 hover:scale-150 w-32 h-32 lg:w-64 lg:h-64" /></Link>
				</div>
			</div>      

			<div id="3" className="flex flex-shrink-0 snap-start snap-normal flex-col items-center lg:flex-row  content-center justify-center w-screen h-screen"> 
				<Link href="#2" scroll={true} replace><IcBaselineArrowLeft className="flex-shrink-0 text-link hover:text-on transition ease-in-out delay-150 duration-[400ms] hover:-translate-y-1 hover:scale-150 w-0 h-0 lg:w-64 lg:h-64 invisible lg:visible" /></Link>
				<Graphic colour={['#37367b', '#9ef990']} data={data} />     		
				<div className="flex flex-row w-full lg:w-fit justify-center"> 
					<Link href="#2" scroll={true} replace><IcBaselineArrowLeft className="flex-shrink-0 text-link hover:text-on transition ease-in-out delay-150 duration-[400ms] hover:-translate-y-1 hover:scale-150 w-32 h-32 lg:w-0 lg:h-0" /></Link>
				</div>
			</div>       
		</div>
	)
}
